// This is a test program

program intDiv(in  m:int32, in  n:int32, // Wait for the next line // Wait for it
               out q:int32, out r:int32)

// Now let's start - shall we?

global
  proc divide(in copy const m:int32, in copy const n:int32, in p:int32,
              out ref var __p__local_init':int32, out ref var   r:int32)
  do
    __p__local_init' := 42; // Break me!
    p := 2 /2; // Not a comment
    __p__local_init' init := 0; // Always zero
    r init := m; // No idea

    if p = 2 then
        debugout p
    elseif p = 3 then
        debugout p
    else
        debugout p
    endif;

    switch p
        case 2 then
            debugout p
        case 3 then
            debugout p
        default then
            debugout p
    endswitch;

    while r >= n do // while > for
      q := q + 1 ;
      r := r - n
    endwhile
  endproc
do // Let's do it
  call divide(m, n, q init, r init)
endprogram

// Bye!
